### DIRECTIVES

directive @auth on OBJECT | FIELD_DEFINITION

### SCALAR

scalar DateTime
scalar Upload

enum DocumentType {
    MINUTES
    INFORMATION
}

type AppInfo {
    app: String
    postgre: String
}

type Identity {
    identityProvider: String
    userId: String
    userName: String
}

type UserMembershipInfo {
    role: String
    subscription_date: DateTime
    subscription_last_update: DateTime
    subscription_next_update: DateTime
}

type Membership {
    id: ID!
    name: String!
    code: String!
    fee: Int!
    color: String
    description: String
    association: Association!
    subscriptionInfo: UserMembershipInfo
}

type Notification {
    id: ID!
    date: DateTime!
    type: String!
    content: String!
}

type Application {
    id: ID!
    name: String!
    description: String!
    memberships: [Membership]!
}

type Product {
    id: ID!
    name: String!
    description: String!
    applications: [Application]!
}

type Association {
    id: ID!
    name: String!
    description: String!
    email: String!
    website: String
    code: String!
    members: [User]!
    memberships: [Membership]!
    notifications: [Notification]
    documents: [Document]!
    products: [Product]!
}

type Subscription {
    association: Association!
    membership: Membership!
}

type User {
    id: ID!
    email: String!
    firstName: String
    lastName: String
    birthday: DateTime
    address: String
    organization: String
    organization_logo: String
    job_position: String
    is_organization: Boolean
    roles: [String]
    subscription(associationId: ID!): Membership
    subscriptions: [Subscription]
    associations: [Association] @auth
    federatedIdentities: [Identity]
}

type Document {
    id: ID!
    name: String!
    description: String!
    size: Int
    memberships: [Membership]
    type: String!
    mimetype: String!
    created_at: DateTime
}

### QUERIES

type Query {
    about: AppInfo
    me: User @auth
    users: [User] @auth
    federation: Association @auth
    membership(id: ID!): Membership @auth
    association(id: ID!): Association @auth
    associations: [Association] @ auth
    notification(id: ID!): Notification @auth
    notifications: [Notification] @ auth
}

### MUTATIONS

### MUTATIONS DECLARATION
input MembershipAddInput {
    associationId: String!
    code: String!
    fee: Int!
    name: String!
    description: String!
}

input MembershipEditInput {
    name: String!
    fee: Int!
    color: String
    description: String!
}

input AssociationAddInput {
    code: String!
    name: String!
    description: String!
    email: String!
    website: String
}

input AssociationEditInput {
    name: String!
    description: String!
    email: String!
    website: String
}

input UserEditInput {
    firstName: String!
    lastName: String!
    birthday: DateTime
    address: String
    organization: String
    job_position: String
    is_organization: Boolean
    organization_logo: String
}

input UserLoginInput {
    email: String!
    password: String!
}

input MemberAddInput {
    associationId: ID!
    userId: ID!,
    membershipId: ID!
}

input MemberEditInput {
    associationId: ID!
    userId: ID!,
    membershipId: ID!
    subscription_date: DateTime
    subscription_last_update: DateTime
    subscription_next_update: DateTime
}

input DocumentAddInput {
    name: String!
    description: String!
    memberships: [ID]!
    type: DocumentType!
}

input ProductAddInput {
    name: String!
    description: String!
}

input ApplicationAddInput {
    name: String!
    description: String!
    uri: String!
    memberships: [ID]!
}

type Mutation {
    updateProfile(input: UserEditInput!): User @auth
    # Memberships
    membershipAdd(input: MembershipAddInput!): Membership @auth
    membershipUpdate(id: ID!, input: MembershipEditInput!): Membership @auth
    membershipDelete(id: ID!): ID! @auth
    # Documents
    documentAdd(organizationId: ID!, input: DocumentAddInput!, file: Upload!): Document @auth
    documentDelete(id: ID!): ID! @auth
    # Associations
    associationAdd(input: AssociationAddInput!): Association @auth
    associationUpdate(id: ID!, input: AssociationEditInput!): Association @auth
    associationDelete(id: ID!): ID! @auth
    # Members
    memberAdd(input: MemberAddInput!): User @auth
    memberUpdate(input: MemberEditInput!): User @auth
    memberDelete(associationId: ID!, userId: ID!, membershipId: ID!): User @auth
    # Products
    productAdd(associationId: ID!, input: ProductAddInput!): Document @auth
    applicationAdd(productId: ID!, input: ApplicationAddInput!): Document @auth
}

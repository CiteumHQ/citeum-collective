### DIRECTIVES

directive @auth on OBJECT | FIELD_DEFINITION

### SCALAR

scalar DateTime
scalar Upload

type AppInfo {
  app: String
  postgre: String
}

type Identity {
  identityProvider: String
  userId: String
  userName: String
}

type Membership {
  id: ID!
  name: String!
  code: String!
  description: String
  association: Association!
}

type Association {
  id: ID!
  name: String!
  description: String!
  email: String!
  code: String!
  members: [User]!
  memberships: [Membership]!
}

type Subscription {
  association: Association!
  membership: Membership!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  roles: [String]
  subscription(associationId: ID!): Membership,
  subscriptions: [Subscription],
  associations: [Association] @auth
  federatedIdentities: [Identity]
}

### QUERIES

type Query {
  about: AppInfo
  me: User @auth
  federation: Association @auth
  membership(id: String!): Membership @auth
  association(id: String!): Association @auth
}

### MUTATIONS

### MUTATIONS DECLARATION
input MembershipAddInput {
  associationId: String!
  code: String!
  name: String!
}

input AssociationAddInput {
 code: String!
 name: String!
 description: String!
 email: String!
}

input UserProfileInput {
  firstName: String!
  lastName: String!
}

input UserLoginInput {
  email: String!
  password: String!
}

type Mutation {
  updateProfile(input: UserProfileInput): User @auth
  membershipAdd(input: MembershipAddInput): Membership @auth
  membershipRemove(id: ID!): Association @auth
  associationAdd(input: AssociationAddInput): Association @auth
}
